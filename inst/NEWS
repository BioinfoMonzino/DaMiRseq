Version 2.6.0
  o Major: We fixed a bug in DaMiR.ModelSelect. Now optimal models
  are correctly selected;
  
  o Major: Now users can plot specific graphs in DaMiR.Allplot and
  we added new plots;
  
  o Minor: We modified the color scale in corrplot

----------------
Version 2.0.0
  o Since version 2.0.0 of the software, DaMiRseq offers a solution
  to solve two distinct problems, in supervised learning analysis:
  (i) finding a small set of robust features, and (ii) building the
  most reliable model to predict new samples;

  o The functions DaMiR.EnsembleLearning2cl_Training,
  EnsembleLearning2cl_Test and EnsembleLearning2cl_Predict were
  deprecated and replaced by DaMiR.EnsL_Train, DaMiR.EnsL_Test
  and DaMiR.EnsL_Predict, respectively;

  o We have created a new function DaMiR.ModelSelect to select the
  best model in a machine learning analysis;

  o We have created two new functions DaMiR.iTSnorm and DaMiR.iTSadjust
  to normalize and adjust the gene espression of independent test sets;

  o Two types of expression value distribution plot were added
  to the DaMiR.Allplot function.

----------------
Version 1.5.2
  o The DaMiR.normalization function embeds also the 'logcpm'
    normalization.

  o Now, DaMiR.EnsembleLearning calculates also the Positive
    Predicted Values (PPV) and the Negative Predicted Values (NPV).

  o Three new functions have been implemented for the binary
    classification task: DaMiR.EnsembleLearning2cl_Training,
    DaMiR.EnsembleLearning2cl_Test and DaMiR.EnsembleLearning2cl_Predict.
    The first one allows the user to implement the training task and
	to select the model with the highest accuracy or the average
	accuracy; the second function allows the user to test the
	selected classification model on a test set defined by the
	user; the last function allows the user to predict the class
	of new samples.

  o Removed black dots in the violin plots.

----------------
Version 1.4.1
  o Adjusted Sensitivity and Specificity calculations.

----------------
Version 1.4
Relevant modifications:
  o DaMiRseq performs both binary and multi-class classification
    analysis.

  o The 'Stacking' meta-learner can be composed by the user,
    setting the new parameter 'cl_type' of the
	DaMiR.EnsembleLearning function. Any combination up to 8
	classifiers ('RF', 'NB', 'kNN', 'SVM', 'LDA', 'LR', 'NN',
	'PLS') is now allowed.

  o If the dataset is imbalanced, a 'Down-Sampling' strategy is
    automatically applied.

  o The DaMiR.FSelect function has the new argument, called
    nPlsIter, which allows the user to have a more robust features
	set. In fact, several feature sets are generated by the 'bve_pl'
	function, setting 'nPLSIter' parameter greater than 1. Finally,
	an intersection among all the feature sets is performed to return
	those features which constantly occur in all runs. However,
	by default, nPlsIter = 1.

Minor modifications and bugs fixed:
  o DaMiR.Allplot accepts also 'matrix' objects.

  o The DaMiR.normalization function estimates the dispersion, through
    the parameter 'nFitType'.

  o In the DaMiR.normalization function, the gene filtering is
    disabled if 'minCount = 0'.

  o In the DaMiR.EnsembleLearning function, the method for implementing
    the Logistic Regression has been changed to allow multi-class
	comparisons; instead of the native 'lm' function, the 'bayesglm'
	method is now used.

  o The new parameter 'second.var' of the 'DaMiR.SV' function, allows
    the user to take into account a secondary variable of interest
	(factorial or numerical) that the user does not wish to correct for,
	during the sv identification.
----------------
Version 1.3.7
  o DaMiRseq performs multi-class classification analysis.

  o The Stacking meta-learner can be composed by the user,
	  setting the new parameter 'cl_type' of the
	  DaMiR.EnsembleLearning() function. Any combination
	  of the 8 classifiers is now allowed.

	o If the dataset is imbalanced, a 'Down-Sampling'
	  strategy is automatically applied.

	o The DaMiR.FSelect() function has the new
	  argument, called 'nPlsIter', which allows the
	  user to have a more robust features set. In fact,
	  several feature sets are generated by the bve_pls()
	  fuction (embedded in DaMiR.FSelect()), setting
	  'nPLSIter' parameter greater than 1.
	  Finally, an intersection among all the feature sets
	  is performed to return those features which constantly
	  occur in all runs. However, by default, 'nPlsIter = 1'.

	o DaMiR.Allplot() accepts also 'matrix' objects as well as NA values
	  (which are not plotted).

	o The DaMiR.normalization() function estimates the
	  dispersion, through the parameter 'nFitType'; as in
	  DESeq2 package, the argument can be
	  'parametric' (default), 'local' and 'mean'.

	o In the DaMiR.normalization() function, the gene
	  filtering is desabled if 'minCount = 0'.

	o In the DaMiR.EnsembleLearning() function, the method for
	  implementing the Logistic Regression has been changed
	  to allow multi-class comparisons; instead of the native
      'lm' function, 'bayesglm' method implemented in the caret
	  'train' function, properly set, is now used.

	o The new parameter 'second.var' of the DaMiR.SV() function,
      allows the user to take into account a secondary variable
	  of interest (factorial or numerical) that the user does
	  not wish to correct for, during the sv identification.
